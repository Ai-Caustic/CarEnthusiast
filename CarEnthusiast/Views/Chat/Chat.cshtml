
@using System.Net.Mail
@model GroupChatViewModel

@{
    Layout = null;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<link rel="stylesheet" href="~/css/chat.css" />
<link rel="stylesheet" href="~/font-awesome-4.5.0/css/font-awesome.css">



<aside class="sidebar">
    <ul class="group-list">
        @foreach (var group in Model.UserGroups)
        {
            <li class="list-group-item @(Model.SelectedGroup == group ? "active" : "")">
                <a asp-controller="Chat" asp-action="Chat" asp-route-groupId="@group.Id">@group.GroupName</a>
            </li>  
        }
    </ul>
</aside>
<section class="msger">
    @if (Model.SelectedGroup != null)
    {
        <header class="msger-header">
            <ul class="socialicon">
                <li><a asp-controller="Home" asp-action="Index"><i class="fa fa-home"></i></a></li>
                <li><a asp-controller="Cars" asp-action="Land"><i class="fa fa-car"></i></a></li>
                <li><a asp-controller="Chat" asp-action="Chat"><i class="fa fa-comments-o"></i></a></li>
                <li><a asp-controller="Home" asp-action="Privacy"><i class="fa fa-user-secret"></i></a></li>
            </ul>
                <p class="text-center">@Model.SelectedGroup.GroupName.ToUpper()</p>
        </header>

        @if (Model.Messages != null)
        {
            <main class="msger-chat">
                @foreach (var message in Model.Messages.OrderBy(msg => msg.dateTime))
                {
                    MailAddress email = new MailAddress(message.UserName);
                    var time = message.dateTime.ToString("h:mm:tt");
                    var userName = email.User;

                    <div class="msg @(message.UserName == User.Identity.Name ? "right-msg" : "left-msg")">
                        <div class="msg-img" style=""></div>

                        <div class="msg-bubble">
                            <div class="msg-info">
                                <div class="msg-info-name">@userName</div>
                                <div class="msg-info-time">@time</div>
                            </div>

                            <div class="msg-text">@message.Text</div>
                        </div>
                    </div>
                }
            </main>
        }
        <div class="msger-inputarea">
                <input type="text" class="form-control" id="groupMessageInput" placeholder="Enter your message..."/>
            <button id="groupSendButton" data-group-itemid="@Model.SelectedGroup.Id" class="msger-send-btn">Send</button>
        </div>
    }

</section>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.10/signalr.min.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/ChatHub").build();

    document.getElementById("groupSendButton").addEventListener("click", function (event) {
        var message = document.getElementById("groupMessageInput").value;
        var groupId = parseInt(this.getAttribute("data-group-itemid"));

        if (message && groupId) {
            connection.invoke("SendGroupMessage", groupId, message).then(function () {
                // After the message is sent successfully, reload the page to show the latest messages
                location.reload();
            }).catch(function (err) {
                return console.error(err.toString());
            });
        }

        event.preventDefault();
    });

    connection.on("ReceiveMessage", function (user, message) {
        var encodedMessage = user + ": " + message;
        var li = document.createElement("li");
        li.textContent = encodedMessage;
        document.getElementById("groupMessages").appendChild(li);
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
</script>